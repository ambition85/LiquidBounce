/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2016 - 2020 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id "java"
}

def importGui = tasks.register("importGui", Copy) {
    delete(file("$buildDir/tmp/theme/"))

    // Depend on zipping gui
    dependsOn zipGui

    // Export to resources
    from file("$buildDir/tmp/output/")
    into file("$buildDir/tmp/resources/")
}

def zipGui = tasks.register("zipGui", Zip) {
    // Copy public folder to tmp/theme
    for (folder in file(".").listFiles()) {
        // Check if folder is theme
        if (!folder.listFiles().any { (it.name == "public") }) {
            continue
        }

        // Copy public folder to correct folder structure
        copy {
            from file("$folder/public")
            into file("$buildDir/tmp/theme/$folder.name")
        }
    }

    // Zip default theme
    archiveFileName = "default_theme.zip"
    destinationDirectory = file("$buildDir/tmp/output/assets/liquidbounce/")

    from file("$buildDir/tmp/theme")
}

sourceSets {
    java {
        main {
            resources {
                srcDir(importGui)
            }
        }
    }
}
